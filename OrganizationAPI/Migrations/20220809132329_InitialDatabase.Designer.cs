// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrganizationAPI.Data;

#nullable disable

namespace OrganizationAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220809132329_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("OrganizationAPI.Models.OrganizationRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ID"));

                    b.Property<int?>("OrganizationsID")
                        .HasColumnType("integer");

                    b.Property<int>("RolesId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("OrganizationsID");

                    b.ToTable("OrganizationRole");
                });

            modelBuilder.Entity("OrganizationAPI.Models.Organizations", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ID"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("OrganizationAPI.Models.Roles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ID"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("OrganizationAPI.Models.RoleUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ID"));

                    b.Property<int?>("OrganizationRoleID")
                        .HasColumnType("integer");

                    b.Property<int>("UsersId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("OrganizationRoleID");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("OrganizationAPI.Models.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ID"));

                    b.Property<string>("fullname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OrganizationAPI.Models.OrganizationRole", b =>
                {
                    b.HasOne("OrganizationAPI.Models.Organizations", null)
                        .WithMany("OrganizationRole")
                        .HasForeignKey("OrganizationsID");
                });

            modelBuilder.Entity("OrganizationAPI.Models.RoleUser", b =>
                {
                    b.HasOne("OrganizationAPI.Models.OrganizationRole", null)
                        .WithMany("RoleUser")
                        .HasForeignKey("OrganizationRoleID");
                });

            modelBuilder.Entity("OrganizationAPI.Models.OrganizationRole", b =>
                {
                    b.Navigation("RoleUser");
                });

            modelBuilder.Entity("OrganizationAPI.Models.Organizations", b =>
                {
                    b.Navigation("OrganizationRole");
                });
#pragma warning restore 612, 618
        }
    }
}
